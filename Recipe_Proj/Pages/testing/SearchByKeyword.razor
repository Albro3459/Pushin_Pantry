@page "/searchByKeywords"

@using Recipe_Proj.Services
@using Recipe_Proj.DTOs

@inject IRecipeService RecipeService

<h1>Find Your Recipe!</h1>
<form>
    <input type="text" @bind='searchKeywords' placeholder="Search for recipes...">
    <ul class="ingredients-list">
        <!-- Your existing list of checkboxes goes here -->
    </ul>
    <button type="button" class="btn" @onclick="SearchRecipes">Find Recipes</button>
</form>

@if (recipes == null)
{
    <p>Loading recipes...</p>
}
else if (recipes.Count == 0)
{
    <p>No recipes found.</p>
}
else
{
    <ul>
    @foreach (var recipe in recipes)
        {
            <li>@recipe.RecipeName</li>
        }
        @* <li>@recipes</li> *@
    </ul>
}

@code {
    private List<SimpleRecipeDTO> recipes = new();
    public string searchKeywords = string.Empty;

    protected async Task SearchRecipes()
    {
        try
        {
            recipes = await RecipeService.SearchRecipesByKeywords(searchKeywords);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching recipes: {ex.Message}");
            // Consider setting an error message in the UI as well
        }
    }
}
