@page "/searchByKeywords"

@using Recipe_Proj.Services
@using Recipe_Proj.DTOs

@inject IRecipeService RecipeService

@if (recipes == null)
{
    <p>Loading recipes...</p>
}
else if (recipes.Count == 0)
{
<p>No recipes found.</p>
}
else
{
    <ul>
    @foreach (var recipe in recipes)
    {
    <li>@recipe.RecipeName</li>
    }
    @* <li>@recipes</li> *@
</ul>
}

@code {
    private List<SimpleRecipeDTO> recipes = new();
    private string keywords = "Asian free";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            recipes = await RecipeService.SearchRecipesByKeywords(keywords);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching recipes: {ex.Message}");
            // Consider setting an error message in the UI as well
        }
    }
}
